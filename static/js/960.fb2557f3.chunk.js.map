{"version":3,"file":"static/js/960.fb2557f3.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContact = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectContact],\n  (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n  \n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nwidth: 400px;\nmargin: ${p => p.theme.space[4]}px auto;\npadding: ${p => p.theme.space[4]}px;\nborder:${p => p.theme.borders.normal};\n`\n\nexport const Label = styled.label`\nfont-size:${p => p.theme.fontSizes.m};\nfont-weight:${p => p.theme.fontWeights.bold};\nline-height: ${p => p.theme.lineHeights.heading};\n`;\n\nexport const Input = styled.input`\ndisplay: block;\nmargin-top: ${p => p.theme.space[2]}px;\nmargin-bottom: ${p => p.theme.space[5]}px;\n`;\n\n\nexport const Btn = styled.button`\nwidth: 120px;\npadding: ${p => p.theme.space[3]}px;\nborder: ${p => p.theme.borders.none};\nborder-radius: ${p => p.theme.radii.sm};\ncursor: pointer;\n:hover, \n:focus  {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.primary};\n}\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContact } from 'redux/contacts/selectors';\nimport { Form, Label, Input,Btn } from './ContactForm.styled';\n\nexport function ContactForm ()  {\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContact);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const form = e.target;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;   \n\n        if (contacts) {\n            contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n            ? alert(name + ' is already in contacts')\n            : dispatch(addContact({ name,number }))\n        }\n        form.reset();\n    };\n\n\n     return (\n            <Form onSubmit={handleSubmit} autoComplete=\"off\">\n                <Label>\n                    <span>Name</span>\n                    <Input\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                </Label>\n                <Label>\n                    <span>Number</span>\n                    <Input\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                    />\n                </Label>\n                <Btn type='submit'>Add contact</Btn>\n            </Form>\n        );\n}\n","import styled from \"styled-components\";\n\nexport const ContactCard = styled.li`\nmargin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const Name = styled.span`\nfont-size: ${p => p.theme.fontSizes.m};\nfont-weight: ${p => p.theme.fontWeights.bold};\nmargin-right: ${p => p.theme.space[3]}px;\n`;\n\nexport const Number = styled.span`\nmargin-right:${p => p.theme.space[3]}px;\n`;\n\nexport const Btn = styled.button`\npadding: ${p => p.theme.space[3]}px;\nborder: ${p => p.theme.borders.none};\nborder-radius: ${p => p.theme.radii.sm};\ncursor: pointer;\n:hover, \n:focus  {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.primary};\n}\n`;","import PropTypes from \"prop-types\";\nimport { ContactCard, Name, Number, Btn } from \"./ContactItem.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/operations\";\n\n\nexport const ContactListItem = ({ name, id, number }) => {\n    const dispatch = useDispatch();\n    const handleDelete = () => dispatch(deleteContact(id));\n\n    return (\n        <ContactCard key={id}>\n            <Name>{name} - </Name>\n            <Number>{number}</Number>\n            <Btn type=\"button\" id={id} onClick={handleDelete}>\n                Delete\n            </Btn>\n                \n            \n        </ContactCard>\n    )\n};\n\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    align-items: end;\n    margin: 0 auto;\n`;","import { ContactListItem } from \"../ContactItem/ContactItem\";\nimport { List } from \"./ContactList.styled\";\nimport { selectVisibleContacts} from \"redux/contacts/selectors\";\nimport { useSelector} from \"react-redux\";\n\nexport const ContactList = () => {\n\n    const visibleContacts = useSelector(selectVisibleContacts);\n\n    return (\n        <List>\n            {visibleContacts.length  ? (\n                visibleContacts.map(({ name, id, number }) => {\n                return (\n                    <ContactListItem\n                        key={id}\n                        name={name}\n                        number={number}\n                        id={id}\n                    />\n                )\n            })\n            ) : (<p  > Contact list is empty</p>)\n};\n        </List>\n    )\n};\n","import styled from \"styled-components\";\n\nexport const Label = styled.label`\nfont-size:${p => p.theme.fontSizes.m};\nfont-weight:${p => p.theme.fontWeights.bold};\nline-height: ${p => p.theme.lineHeights.heading};\n`;\n\nexport const Input = styled.input`\ndisplay: block;\nmargin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Text = styled.p`\nmargin-bottom: ${p => p.theme.space[3]}px;\n`;","import { useDispatch } from \"react-redux\";\nimport { setFilter } from \"redux/contacts/contactsSlice\";\nimport { Label, Input, Text } from \"./Filter.styled\";\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    \n    const hangleFilter = e => {\n        dispatch(setFilter(e.target.value));\n    };\n\n    return (\n        <Label>\n            <Text>Find contacts by name</Text>\n            <Input onChange={hangleFilter} type=\"text\" name=\"filter\" />\n        </Label>\n    );\n};\n","import { useEffect } from \"react\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectIsLoading } from \"redux/contacts/selectors\";\nimport { Filter } from \"components/Filter/Filter\";\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n            <ContactForm />\n            <div>{isLoading && 'Request in progress ... '}</div>\n            <ContactList />\n            <Filter/>\n        </>\n    );\n}\n\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContact","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","filter","normalizedFilter","toLowerCase","contact","includes","Form","styled","p","theme","space","borders","normal","Label","fontSizes","m","fontWeights","bold","lineHeights","heading","Input","Btn","none","radii","sm","colors","white","primary","ContactForm","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","form","target","elements","number","alert","addContact","reset","autoComplete","type","pattern","title","required","ContactCard","Name","Number","ContactListItem","id","onClick","deleteContact","List","ContactList","visibleContacts","Text","Filter","onChange","setFilter","Contacts","useEffect","fetchContacts"],"sourceRoot":""}